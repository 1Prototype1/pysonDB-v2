from typing import Any
from typing import Callable
from typing import Dict
from typing import List
from typing import Union

UJSON: bool


class PysonDB:

    def __init__(self, filename: str, auto_update: bool = True, indent: int = 4) -> None: ...

    def _load_file(self) -> Dict[str, Union[int, List[str], Dict[str, Any]]]: ...

    def _dump_file(self, data:  Dict[
        str, Union[
            int,
            List[str],
            Dict[
                str, Any
            ]
        ]
    ]
    ) -> None: ...

    def _gen_db_file(self) -> None: ...

    def _gen_id(self) -> str: ...

    def force_load(self) -> None: ...

    def commit(self) -> None: ...

    def add(self, data: object) -> str: ...

    def add_many(self, data: object, json_response: bool = False) -> Union[Dict[str,
                                                                                Union[int, str, bool, List[Union[int, str, bool]]]], None]: ...

    def get_all(self) -> Dict[str, Dict[str, Union[int, str, bool]]]: ...

    def get_by_id(self, id: str) -> Dict[str, Union[int, str, bool, List[Union[int, str, bool]]]]: ...

    def get_by_query(self, query: Callable[[Dict[str, Any]], bool]) -> Dict[str, Dict[str, Union[int, str, bool]]]: ...

    def update_by_id(self, id: str, new_data: object) -> Dict[str,
                                                              Union[int, str, bool, List[Union[int, str, bool]]]]: ...

    def update_by_query(self, query: Callable[[Dict[str, Any]], bool], new_data: object) -> List[str]: ...

    def delete_by_id(self, id: str) -> None: ...

    def delete_by_query(self, query: Callable[[Dict[str, Any]], bool]) -> List[str]: ...

    def purge(self) -> None: ...
