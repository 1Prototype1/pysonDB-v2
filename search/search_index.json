{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PysonDB-V2 Quick walk through of all the methods from pysondb import PysonDB db = PysonDB ( 'test.json' ) ! cat test . json { \"version\": 2, \"keys\": [], \"data\": {} } add 1 2 3 4 5 6 id = db . add ({ 'name' : 'adwaith' , 'age' : 4 , 'knows_python' : True }) print ( id ) 231541323453553701 ! cat test . json { \"version\": 2, \"keys\": [ \"age\", \"knows_python\", \"name\" ], \"data\": { \"231541323453553701\": { \"name\": \"adwaith\", \"age\": 4, \"knows_python\": true } } } add_many 1 2 3 4 5 6 7 8 9 10 11 12 13 added_values = db . add_many ([ { 'name' : 'fredy' , 'age' : 19 , 'knows_python' : True }, { 'name' : 'kenny' , 'age' : 19 , 'knows_python' : False } ]) print ( added_values ) None 1 2 3 4 5 6 7 8 9 10 11 12 13 added_values = db . add_many ([ { 'name' : 'mathew' , 'age' : 22 , 'knows_python' : False }, { 'name' : 'abi' , 'age' : 19 , 'knows_python' : True } ], json_response = True ) print ( added_values ) {'330993934764646664': {'name': 'mathew', 'age': 22, 'knows_python': False}, '131457970736078364': {'name': 'abi', 'age': 19, 'knows_python': True}} ! cat test . json { \"version\": 2, \"keys\": [ \"age\", \"knows_python\", \"name\" ], \"data\": { \"231541323453553701\": { \"name\": \"adwaith\", \"age\": 4, \"knows_python\": true }, \"263597723557497291\": { \"name\": \"fredy\", \"age\": 19, \"knows_python\": true }, \"299482429835276227\": { \"name\": \"kenny\", \"age\": 19, \"knows_python\": false }, \"330993934764646664\": { \"name\": \"mathew\", \"age\": 22, \"knows_python\": false }, \"131457970736078364\": { \"name\": \"abi\", \"age\": 19, \"knows_python\": true } } } get_by_id 1 print ( db . get_by_id ( '263597723557497291' )) {'name': 'fredy', 'age': 19, 'knows_python': True} get_by_query 1 2 3 4 5 def age_divisible_by_2 ( data ): if data [ 'age' ] % 2 == 0 : return True print ( db . get_by_query ( query = age_divisible_by_2 )) {'231541323453553701': {'name': 'adwaith', 'age': 4, 'knows_python': True}, '330993934764646664': {'name': 'mathew', 'age': 22, 'knows_python': False}} get_all 1 print ( db . get_all ()) { \"231541323453553701\":{ \"name\":\"adwaith\", \"age\":4, \"knows_python\":true }, \"263597723557497291\":{ \"name\":\"fredy\", \"age\":19, \"knows_python\":true }, \"299482429835276227\":{ \"name\":\"kenny\", \"age\":19, \"knows_python\":false }, \"330993934764646664\":{ \"name\":\"mathew\", \"age\":22, \"knows_python\":false }, \"131457970736078364\":{ \"name\":\"abi\", \"age\":19, \"knows_python\":true } } update_by_id 1 2 3 4 updated_data = db . update_by_id ( '231541323453553701' , { 'age' : 18 }) print ( updated_data ) {'name': 'adwaith', 'age': 18, 'knows_python': True} update_by_query 1 2 3 4 5 updated_ids = db . update_by_query ( query = lambda x : x [ 'name' ] == 'abi' , new_data = { 'knows_python' : False } ) print ( updated_ids ) ['131457970736078364'] 1 ! cat test . json { \"version\": 2, \"keys\": [ \"age\", \"knows_python\", \"name\" ], \"data\": { \"231541323453553701\": { \"name\": \"adwaith\", \"age\": 18, \"knows_python\": true }, \"263597723557497291\": { \"name\": \"fredy\", \"age\": 19, \"knows_python\": true }, \"299482429835276227\": { \"name\": \"kenny\", \"age\": 19, \"knows_python\": false }, \"330993934764646664\": { \"name\": \"mathew\", \"age\": 22, \"knows_python\": false }, \"131457970736078364\": { \"name\": \"abi\", \"age\": 19, \"knows_python\": false } } } delete_by_id 1 db . delete_by_id ( '131457970736078364' ) # delete abi 1 ! cat test . json { \"version\": 2, \"keys\": [ \"age\", \"knows_python\", \"name\" ], \"data\": { \"231541323453553701\": { \"name\": \"adwaith\", \"age\": 18, \"knows_python\": true }, \"263597723557497291\": { \"name\": \"fredy\", \"age\": 19, \"knows_python\": true }, \"299482429835276227\": { \"name\": \"kenny\", \"age\": 19, \"knows_python\": false }, \"330993934764646664\": { \"name\": \"mathew\", \"age\": 22, \"knows_python\": false } } } delete_by_query 1 2 ids = db . delete_by_query ( lambda x : x [ 'knows_python' ] is False ) print ( ids ) ['299482429835276227', '330993934764646664'] 1 ! cat test . json { \"version\": 2, \"keys\": [ \"age\", \"knows_python\", \"name\" ], \"data\": { \"231541323453553701\": { \"name\": \"adwaith\", \"age\": 18, \"knows_python\": true }, \"263597723557497291\": { \"name\": \"fredy\", \"age\": 19, \"knows_python\": true } } } purge 1 db . purge () 1 ! cat test . json { \"version\": 2, \"keys\": [], \"data\": {} } For more docs click here","title":"Docs"},{"location":"#pysondb-v2","text":"","title":"PysonDB-V2"},{"location":"#quick-walk-through-of-all-the-methods","text":"from pysondb import PysonDB db = PysonDB ( 'test.json' ) ! cat test . json { \"version\": 2, \"keys\": [], \"data\": {} }","title":"Quick walk through of all the methods"},{"location":"#add","text":"1 2 3 4 5 6 id = db . add ({ 'name' : 'adwaith' , 'age' : 4 , 'knows_python' : True }) print ( id ) 231541323453553701 ! cat test . json { \"version\": 2, \"keys\": [ \"age\", \"knows_python\", \"name\" ], \"data\": { \"231541323453553701\": { \"name\": \"adwaith\", \"age\": 4, \"knows_python\": true } } }","title":"add"},{"location":"#add_many","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 added_values = db . add_many ([ { 'name' : 'fredy' , 'age' : 19 , 'knows_python' : True }, { 'name' : 'kenny' , 'age' : 19 , 'knows_python' : False } ]) print ( added_values ) None 1 2 3 4 5 6 7 8 9 10 11 12 13 added_values = db . add_many ([ { 'name' : 'mathew' , 'age' : 22 , 'knows_python' : False }, { 'name' : 'abi' , 'age' : 19 , 'knows_python' : True } ], json_response = True ) print ( added_values ) {'330993934764646664': {'name': 'mathew', 'age': 22, 'knows_python': False}, '131457970736078364': {'name': 'abi', 'age': 19, 'knows_python': True}} ! cat test . json { \"version\": 2, \"keys\": [ \"age\", \"knows_python\", \"name\" ], \"data\": { \"231541323453553701\": { \"name\": \"adwaith\", \"age\": 4, \"knows_python\": true }, \"263597723557497291\": { \"name\": \"fredy\", \"age\": 19, \"knows_python\": true }, \"299482429835276227\": { \"name\": \"kenny\", \"age\": 19, \"knows_python\": false }, \"330993934764646664\": { \"name\": \"mathew\", \"age\": 22, \"knows_python\": false }, \"131457970736078364\": { \"name\": \"abi\", \"age\": 19, \"knows_python\": true } } }","title":"add_many"},{"location":"#get_by_id","text":"1 print ( db . get_by_id ( '263597723557497291' )) {'name': 'fredy', 'age': 19, 'knows_python': True}","title":"get_by_id"},{"location":"#get_by_query","text":"1 2 3 4 5 def age_divisible_by_2 ( data ): if data [ 'age' ] % 2 == 0 : return True print ( db . get_by_query ( query = age_divisible_by_2 )) {'231541323453553701': {'name': 'adwaith', 'age': 4, 'knows_python': True}, '330993934764646664': {'name': 'mathew', 'age': 22, 'knows_python': False}}","title":"get_by_query"},{"location":"#get_all","text":"1 print ( db . get_all ()) { \"231541323453553701\":{ \"name\":\"adwaith\", \"age\":4, \"knows_python\":true }, \"263597723557497291\":{ \"name\":\"fredy\", \"age\":19, \"knows_python\":true }, \"299482429835276227\":{ \"name\":\"kenny\", \"age\":19, \"knows_python\":false }, \"330993934764646664\":{ \"name\":\"mathew\", \"age\":22, \"knows_python\":false }, \"131457970736078364\":{ \"name\":\"abi\", \"age\":19, \"knows_python\":true } }","title":"get_all"},{"location":"#update_by_id","text":"1 2 3 4 updated_data = db . update_by_id ( '231541323453553701' , { 'age' : 18 }) print ( updated_data ) {'name': 'adwaith', 'age': 18, 'knows_python': True}","title":"update_by_id"},{"location":"#update_by_query","text":"1 2 3 4 5 updated_ids = db . update_by_query ( query = lambda x : x [ 'name' ] == 'abi' , new_data = { 'knows_python' : False } ) print ( updated_ids ) ['131457970736078364'] 1 ! cat test . json { \"version\": 2, \"keys\": [ \"age\", \"knows_python\", \"name\" ], \"data\": { \"231541323453553701\": { \"name\": \"adwaith\", \"age\": 18, \"knows_python\": true }, \"263597723557497291\": { \"name\": \"fredy\", \"age\": 19, \"knows_python\": true }, \"299482429835276227\": { \"name\": \"kenny\", \"age\": 19, \"knows_python\": false }, \"330993934764646664\": { \"name\": \"mathew\", \"age\": 22, \"knows_python\": false }, \"131457970736078364\": { \"name\": \"abi\", \"age\": 19, \"knows_python\": false } } }","title":"update_by_query"},{"location":"#delete_by_id","text":"1 db . delete_by_id ( '131457970736078364' ) # delete abi 1 ! cat test . json { \"version\": 2, \"keys\": [ \"age\", \"knows_python\", \"name\" ], \"data\": { \"231541323453553701\": { \"name\": \"adwaith\", \"age\": 18, \"knows_python\": true }, \"263597723557497291\": { \"name\": \"fredy\", \"age\": 19, \"knows_python\": true }, \"299482429835276227\": { \"name\": \"kenny\", \"age\": 19, \"knows_python\": false }, \"330993934764646664\": { \"name\": \"mathew\", \"age\": 22, \"knows_python\": false } } }","title":"delete_by_id"},{"location":"#delete_by_query","text":"1 2 ids = db . delete_by_query ( lambda x : x [ 'knows_python' ] is False ) print ( ids ) ['299482429835276227', '330993934764646664'] 1 ! cat test . json { \"version\": 2, \"keys\": [ \"age\", \"knows_python\", \"name\" ], \"data\": { \"231541323453553701\": { \"name\": \"adwaith\", \"age\": 18, \"knows_python\": true }, \"263597723557497291\": { \"name\": \"fredy\", \"age\": 19, \"knows_python\": true } } }","title":"delete_by_query"},{"location":"#purge","text":"1 db . purge () 1 ! cat test . json { \"version\": 2, \"keys\": [], \"data\": {} } For more docs click here","title":"purge"},{"location":"home/","text":"A Revamped version of PysonDB. New Schema and super fast. pip install pysondb - v2 The new DB schema { \"version\" : 2 , \"keys\" [ \"a\" , \"b\" , \"c\" ], \"data\" : { \"384753047545745\" : { \"a\" : 1 , \"b\" : \"something\" , \"c\" : true } } } Features Much better than PysonDB-V1 Lightweight JSON based database. Supports CRUD commands. No Database drivers required. Unique ID assigned for each JSON document added. Strict about Schema of data added. Inbuilt CLI to delete,display,create JSON database. 1 2 3 4 5 6 7 8 9 10 11 from pysondb import PysonDB db = PysonDB ( 'test.json' ) db . add ({ 'name' : 'adwaith' , 'age' : 4 , 'knows_python' : True }) print ( db . get_all ()) { '231541323453553701' : { 'name' : 'adwaith' , 'age' : 4 , 'knows_python' : True }} See its simple..","title":"Home"},{"location":"home/#a-revamped-version-of-pysondb-new-schema-and-super-fast","text":"pip install pysondb - v2","title":"A Revamped version of PysonDB. New Schema and super fast."},{"location":"home/#the-new-db-schema","text":"{ \"version\" : 2 , \"keys\" [ \"a\" , \"b\" , \"c\" ], \"data\" : { \"384753047545745\" : { \"a\" : 1 , \"b\" : \"something\" , \"c\" : true } } }","title":"The new DB schema"},{"location":"home/#features","text":"Much better than PysonDB-V1 Lightweight JSON based database. Supports CRUD commands. No Database drivers required. Unique ID assigned for each JSON document added. Strict about Schema of data added. Inbuilt CLI to delete,display,create JSON database. 1 2 3 4 5 6 7 8 9 10 11 from pysondb import PysonDB db = PysonDB ( 'test.json' ) db . add ({ 'name' : 'adwaith' , 'age' : 4 , 'knows_python' : True }) print ( db . get_all ()) { '231541323453553701' : { 'name' : 'adwaith' , 'age' : 4 , 'knows_python' : True }} See its simple..","title":"Features"}]}